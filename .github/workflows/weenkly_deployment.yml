# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages Once a week

on:
  push:
    paths:
      - '**.html'

# Runs on pushes targeting the default branch
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
# TODO
  # check-file-exists:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout pages existance file
  #       uses: actions/checkout@v2
  #     - name: Check if file exists
  #       run: |
  #         ls -la
  #         cd pages
  #         if [ -f ./pages/ ]; then
  #           echo "File exists"
  #           echo "file-exists=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "File does not exist"
  #           echo "file-exists=false" >> $GITHUB_OUTPUT
  #         fi
  deploy:
    needs: check-file-exists
    if: ${{ needs.check-file-exists.outputs.file-exists == 'true' }}
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
