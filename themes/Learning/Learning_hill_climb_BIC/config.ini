[Learning_hill_climb_BIC]
; nb_runs = 20
arguments = 1000,1500,2000,2500,3000,3500,4000,4500,5000,7500,10000,20000,30000,40000,50000,60000,70000,80000,90000,100000
keyword = bif,Bayesian network, Learning structure, Learning parameters
before_script = before_task
before_function = createSamples
before_task_arguments = {'sample_size' : [1000,1500,2000,2500,3000,3500,4000,4500,5000,7500,10000,20000,30000,40000,50000,60000,70000,80000,90000,100000], 'bifFile' : 'alarm.bif' }
file_used = alarm.bif
evaluation_language = python
evaluation_script = evaluation
evaluation_function = evaluateFscore evaluatePrecision evaluateRecall
timeout = 180
description = Learning a Bayesian network refers to the process of automatically constructing 
    a Bayesian network model from data, without specifying the network structure or conditional 
    probability distributions beforehand. The goal of this task is to compare the performance of
    the hill climb algorithm used with the BIC score for learning the structure 
    of a Bayesian network from data for each target.
    A word of caution: For some targets, the learned structure is incomplete for low number of samples.
    To still be able to compare the performance of the algorithms, we manually add the missing nodes and only
    the missing nodes to the learned structure ( the CPDs and the arcs are not modified ).
arguments_description = Number of samples

task_scale = auto
post_task_scale = linear

task_xlabel = Number of samples
task_ylabel = Time (s)
task_title = Learning time of the best algorithm for each target
task_display = line
post_task_xlabel = Number of samples
post_task_ylabel = Fscore Precision Recall
post_task_title = Fscore with Hill climb algorithm for each target, Precision with Hill climb algorithm for each target, Recall with Hill climb algorithm for each target
post_task_display = line