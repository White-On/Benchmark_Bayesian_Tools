[Learning_best_method]
; nb_runs = 30
arguments = 1000,1500,2000,2500,3000,3500,4000,4500,5000,7500,10000
keyword = bif,Bayesian network, Learning structure, Learning parameters
before_script = before_task
before_function = createSamples
before_task_arguments = {'sample_size' : [1000,1500,2000,2500,3000,3500,4000,4500,5000,7500,10000], 'bifFile' : 'alarm.bif' }
file_used = alarm.bif
evaluation_language = python
evaluation_script = evaluation
evaluation_function = evaluateFscore 
timeout = 60
arguments_description = Number of samples

extra_html_element = alarm.html
description = Learning a Bayesian network refers to the process of automatically constructing 
    a Bayesian network model from data, without specifying the network structure or conditional 
    probability distributions beforehand. The goal of this task is to compare the performance of
    the best algorithms for learning the structure of a Bayesian network from data for each target.

extra_description = All our targets have to learn the structure of the Bayesian network
    alarm.bif from data. The learning process is done with the best algorithm for each target.
    We then compare the performance of each algorithm by computing the Fscore of the learned

task_scale = auto
post_task_scale = auto

task_xlabel = Number of samples
task_ylabel = Time (s)
task_title = Learning time of the best algorithm for each target
task_display = line
post_task_xlabel = Number of samples
post_task_ylabel = Fscore
post_task_title = Fscore of the best algorithm for each target
post_task_display = groupedBar